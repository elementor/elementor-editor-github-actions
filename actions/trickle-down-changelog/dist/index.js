"use strict";var $=Object.create;var x=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var P=(t,e,o,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of R(e))!k.call(t,r)&&r!==o&&x(t,r,{get:()=>e[r],enumerable:!(i=F(e,r))||i.enumerable});return t};var f=(t,e,o)=>(o=t!=null?$(T(t)):{},P(e||!t||!t.__esModule?x(o,"default",{value:t,enumerable:!0}):o,t));var w=f(require("@actions/core")),n=f(require("@actions/github")),c=f(require("semver")),a=f(require("@actions/exec")),s=f(require("fs/promises")),m=n.getOctokit(w.getInput("token")),q=/\d+\.\d+\.\d+(-.*)?/,d="internal@elementor.com";async function b(){let t=n.context.ref.replace("refs/heads/","");if((await m.request("GET /repos/{owner}/{repo}/commits/{sha}",{owner:n.context.repo.owner,repo:n.context.repo.repo,sha:n.context.sha})).data.commit.author.email===d)return;let o=await m.request("GET /repos/{owner}/{repo}/commits/{sha}",{owner:n.context.repo.owner,repo:n.context.repo.repo,sha:n.context.sha,headers:{accept:"application/vnd.github.diff"}});if(!o.data)return;let i=I(o.data),r=E(i);if(!r)return;let h=(await m.request("GET /repos/{owner}/{repo}/branches",{owner:n.context.repo.owner,repo:n.context.repo.repo})).data.filter(g=>{let l=c.parse(g.name+".0");return l&&c.gt(l.version,r)}).map(g=>g.name);h.push("main");let v=await s.readFile("changelog.txt"),p;n.context.repo.repo==="elementor"&&(p=await s.readFile("readme.txt"));for(let g of h)await C(t,g,v,p)}async function C(t,e,o,i){let r=`changelog-${t}-to-${e}`,u=`Internal: Changelog v${t} to ${e} (automatic)`;await a.exec("git fetch --all"),await a.exec(`git checkout ${e}`),await a.exec("git pull"),await a.exec('git config user.name "elementor internal"'),await a.exec(`git config user.email ${d}`),await a.exec(`git reset --hard origin/${e}`),i&&await s.writeFile("readme.txt",i),await s.writeFile("changelog.txt",o),await a.exec(`git checkout -b ${r}`),await a.exec("git add changelog.txt readme.txt"),await a.exec(`git commit -m "${u}"`),await a.exec(`git push --set-upstream origin ${r}`),await m.request("POST /repos/{owner}/{repo}/pulls",{owner:n.context.repo.owner,repo:n.context.repo.repo,title:u,head:r,base:e})}function E(t){if(t.length===0)return;let e=t[0];for(let o of t)c.lt(o,e)&&(e=o);return e}function I(t){let e=t.split(`
`),o=[],i;for(let r of e)r.startsWith("+")&&r.startsWith("+#")&&(i=O(r),i&&o.push(i));return o}function O(t){let e=q.exec(t);if(e&&e.length>0)return e[0]}b();
